{
  "name": "collectype",
  "version": "0.5.1",
  "description": "CollecType is a modern, type-safe collection utility for TypeScript. Effortlessly filter, sort, and transform arrays of any type using a fluent, chainable API.",
  "keywords": [
    "typescript",
    "collection",
    "filter",
    "sort",
    "predicate"
  ],
  "license": "MIT",
  "author": "Marc-Antoine Duhaime",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/maduhaime/collectype.git"
  },
  "type": "module",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "exports": {
    ".": {
      "import": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./enums": {
      "import": "./dist/enums/index.js",
      "types": "./dist/enums/index.d.ts"
    },
    "./types": {
      "import": "./dist/types/index.js",
      "types": "./dist/types/index.d.ts"
    },
    "./utils/filters": {
      "import": "./dist/utils/filters/index.js",
      "types": "./dist/utils/filters/index.d.ts"
    },
    "./utils/pipe": {
      "import": "./dist/utils/pipe/index.js",
      "types": "./dist/utils/pipe/index.d.ts"
    },
    "./utils/predicates": {
      "import": "./dist/utils/predicates/index.js",
      "types": "./dist/utils/predicates/index.d.ts"
    },
    "./utils/primitives": {
      "import": "./dist/utils/primitives/index.js",
      "types": "./dist/utils/primitives/index.d.ts"
    },
    "./utils/sort": {
      "import": "./dist/utils/sort/index.js",
      "types": "./dist/utils/index.d.ts"
    }
  },
  "scripts": {
    "build": "tsc --project tsconfig.build.json",
    "test": "vitest run",
    "test:watch": "vitest watch",
    "test:coverage": "vitest run --coverage",
    "docs": "typedoc --entryPointStrategy expand"
  },
  "devDependencies": {
    "@types/node": "^24.2.1",
    "@vitest/coverage-v8": "^3.2.4",
    "typedoc": "^0.28.9",
    "typedoc-plugin-frontmatter": "^1.3.0",
    "typedoc-plugin-markdown": "^4.8.0",
    "typescript": "^5.9.2",
    "vitest": "^3.2.4"
  }
}
